{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport CreateContactForm from './CreateContactForm';\nfunction CreateContact() {\n  _s();\n  const [data, setData] = useState(null);\n  const [isFormVisible, setFormVisible] = useState(false);\n  const [contacts, setContacts] = useState([]); // Store contacts data\n  const apiUrl = 'http://localhost:8080/add-user/'; // Replace with your API endpoint URL\n\n  const openForm = () => {\n    setFormVisible(true);\n  };\n  const closeForm = () => {\n    setFormVisible(false);\n  };\n  const addContact = newContact => {\n    // Add the new contact to the list of contacts\n    setContacts([...contacts, newContact]);\n  };\n  useEffect(() => {\n    fetch(apiUrl).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(jsonData => {\n      setData(jsonData);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n\n  // return (\n  //     <div className=\"app\">\n  //         <button className='create-contact-button' onClick={openForm}> \n  //         <FontAwesomeIcon icon={faPlus} />\n\n  //         Create Contact</button>\n\n  //         {isFormVisible && (\n  //             <CreateContactForm onClose={closeForm} onSubmit={addContact} />\n  //         )}\n\n  //         {/* Display your list of contacts */}\n  //         <ul>\n  //             {contacts.map((contact, index) => (\n  //                 <li key={index}>\n  //                     <p>Name: {contact.name}</p>\n  //                     <p>Email: {contact.email}</p>\n  //                     <p>Mobile No: {contact.mobileNo}</p>\n  //                     <p>Address: {contact.address}</p>\n  //                 </li>\n  //             ))}\n  //         </ul>\n  //     </div>\n  // );\n  // return (\n  //     <div>\n  //         <button className=\"create-contact-button\">\n  //             <FontAwesomeIcon icon={faPlus} /> Create New Contact\n  //         </button>\n  //         {data ? (\n  //             <div>\n  //                 <table>\n  //             <thead>\n  //                 <tr>\n  //                     <th>Name</th>\n  //                     <th>Mobile No</th>\n  //                     <th>Email</th>\n  //                     <th>Address</th>\n  //                     <th>Edit</th>\n  //                 </tr>\n  //             </thead>\n  //             <tbody>\n  //                 {data.map((item) => (\n  //                     <tr key={item.Id}>\n  //                         <td>{item.Name}</td>\n  //                         <td>{item.Mobileno}</td>\n  //                         <td>{item.Email}</td>\n  //                         <td>{item.Address}</td>\n  //                         <td>\n  //                             <button className=\"edit-button\">&#8942;</button>\n  //                         </td>\n  //                     </tr>\n  //                 ))}\n  //             </tbody>\n  //         </table>\n  //             </div>\n  //         ) : null\n  //         }\n  //     </div>\n  // );\n}\n_s(CreateContact, \"VpNUJm/O9bTyo/D31+iHhuVDVH8=\");\n_c = CreateContact;\nexport default CreateContact;\nvar _c;\n$RefreshReg$(_c, \"CreateContact\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faPlus","CreateContactForm","CreateContact","_s","data","setData","isFormVisible","setFormVisible","contacts","setContacts","apiUrl","openForm","closeForm","addContact","newContact","fetch","then","response","ok","Error","json","jsonData","catch","error","console","_c","$RefreshReg$"],"sources":["C:/Users/Nitish/go/UI/my-react-app/src/CreateContact.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport CreateContactForm from './CreateContactForm';\r\n\r\n\r\nfunction CreateContact() {\r\n    const [data, setData] = useState(null);\r\n    const [isFormVisible, setFormVisible] = useState(false);\r\n    const [contacts, setContacts] = useState([]); // Store contacts data\r\n    const apiUrl = 'http://localhost:8080/add-user/'; // Replace with your API endpoint URL\r\n    \r\n\r\n\r\n    const openForm = () => {\r\n        setFormVisible(true);\r\n    };\r\n\r\n    const closeForm = () => {\r\n        setFormVisible(false);\r\n    };\r\n\r\n    const addContact = (newContact) => {\r\n        // Add the new contact to the list of contacts\r\n        setContacts([...contacts, newContact]);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(apiUrl)\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((jsonData) => {\r\n                setData(jsonData);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching data:', error);\r\n            });\r\n    }, []);\r\n\r\n    // return (\r\n    //     <div className=\"app\">\r\n    //         <button className='create-contact-button' onClick={openForm}> \r\n    //         <FontAwesomeIcon icon={faPlus} />\r\n            \r\n    //         Create Contact</button>\r\n\r\n    //         {isFormVisible && (\r\n    //             <CreateContactForm onClose={closeForm} onSubmit={addContact} />\r\n    //         )}\r\n\r\n    //         {/* Display your list of contacts */}\r\n    //         <ul>\r\n    //             {contacts.map((contact, index) => (\r\n    //                 <li key={index}>\r\n    //                     <p>Name: {contact.name}</p>\r\n    //                     <p>Email: {contact.email}</p>\r\n    //                     <p>Mobile No: {contact.mobileNo}</p>\r\n    //                     <p>Address: {contact.address}</p>\r\n    //                 </li>\r\n    //             ))}\r\n    //         </ul>\r\n    //     </div>\r\n    // );\r\n    // return (\r\n    //     <div>\r\n    //         <button className=\"create-contact-button\">\r\n    //             <FontAwesomeIcon icon={faPlus} /> Create New Contact\r\n    //         </button>\r\n    //         {data ? (\r\n    //             <div>\r\n    //                 <table>\r\n    //             <thead>\r\n    //                 <tr>\r\n    //                     <th>Name</th>\r\n    //                     <th>Mobile No</th>\r\n    //                     <th>Email</th>\r\n    //                     <th>Address</th>\r\n    //                     <th>Edit</th>\r\n    //                 </tr>\r\n    //             </thead>\r\n    //             <tbody>\r\n    //                 {data.map((item) => (\r\n    //                     <tr key={item.Id}>\r\n    //                         <td>{item.Name}</td>\r\n    //                         <td>{item.Mobileno}</td>\r\n    //                         <td>{item.Email}</td>\r\n    //                         <td>{item.Address}</td>\r\n    //                         <td>\r\n    //                             <button className=\"edit-button\">&#8942;</button>\r\n    //                         </td>\r\n    //                     </tr>\r\n    //                 ))}\r\n    //             </tbody>\r\n    //         </table>\r\n    //             </div>\r\n    //         ) : null\r\n    //         }\r\n    //     </div>\r\n    // );\r\n}\r\n\r\nexport default CreateContact;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,QAAQ,mCAAmC;AAC1D,OAAOC,iBAAiB,MAAM,qBAAqB;AAGnD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,aAAa,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAMa,MAAM,GAAG,iCAAiC,CAAC,CAAC;;EAIlD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACnBJ,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMK,SAAS,GAAGA,CAAA,KAAM;IACpBL,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMM,UAAU,GAAIC,UAAU,IAAK;IAC/B;IACAL,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEM,UAAU,CAAC,CAAC;EAC1C,CAAC;EAGDhB,SAAS,CAAC,MAAM;IACZiB,KAAK,CAACL,MAAM,CAAC,CACRM,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAAEK,QAAQ,IAAK;MAChBhB,OAAO,CAACgB,QAAQ,CAAC;IACrB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AAACpB,EAAA,CAlGQD,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAoGtB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}