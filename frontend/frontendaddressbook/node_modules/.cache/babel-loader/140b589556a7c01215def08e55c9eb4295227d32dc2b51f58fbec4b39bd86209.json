{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nitish\\\\go\\\\UI\\\\my-react-app\\\\src\\\\CreateContact.js\";\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport CreateContactForm from './CreateContactForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateContact() {\n  // const [data, setData] = useState('');\n  // const [isFormVisible, setFormVisible] = useState(false);\n  // const [name, setName] = useState('');\n  // const[phoneno,setPhone]=useState('');\n  // const [email, setEmail] = useState('');\n  // const [address, setAddress] = useState('');\n  const apiUrl = 'http://localhost:8080/add-user'; // Replace with your API endpoint URL\n\n  const handleFormSubmit = data => {\n    // Make an HTTP POST request to the backend API with the data\n    fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(responseData => {\n      // Handle the response from the API if needed\n      console.log('Response:', responseData);\n\n      // Clear the input fields or perform any other actions\n    }).catch(error => {\n      // Handle any errors that occurred during the fetch\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Post Data to Backend API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(CreateContactForm, {\n      onFormSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n//     const openForm = () => {\n//         setFormVisible(true);\n//     };\n\n//     const closeForm = () => {\n//         setFormVisible(false);\n//     };\n\n//     const handleSubmit = () => {\n//         const newContact = {\n//             name,\n//             phoneno,\n//             email,\n//             address\n//         };\n//         fetch(apiUrl, {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify(newContact),\n//         })\n//         .then((response) => response.json())\n//         .then((data) => {\n//             console.log(data);\n//             // Clear form fields\n//             setName('');\n//             setPhone('');\n//             setEmail('');\n//             setAddress('');\n//         })\n//         .catch((error) => {\n//             console.error('Error:', error);\n//         });\n//     };\n\n//     useEffect(() => {\n//         fetch(apiUrl)\n//             .then((response) => {\n//                 if (!response.ok) {\n//                     throw new Error('Network response was not ok');\n//                 }\n//                 return response.json();\n//             })\n//             .then((jsonData) => {\n//                 setData(jsonData);\n//             })\n//             .catch((error) => {\n//                 console.error('Error fetching data:', error);\n//             });\n//     }, []);\n\n//     return (\n//         <div className=\"app\">\n//             <button className='create-contact-button' onClick={openForm}> \n//             <FontAwesomeIcon icon={faPlus} />\n\n//             Create Contact</button>\n\n//             {isFormVisible && (\n//                 <CreateContactForm onClose={closeForm} onSubmit={handleSubmit} />\n//             )}\n\n//         </div>\n//     );\n\n// }\n_c = CreateContact;\nexport default CreateContact;\nvar _c;\n$RefreshReg$(_c, \"CreateContact\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faPlus","CreateContactForm","jsxDEV","_jsxDEV","CreateContact","apiUrl","handleFormSubmit","data","fetch","method","headers","body","JSON","stringify","then","response","json","responseData","console","log","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFormSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Nitish/go/UI/my-react-app/src/CreateContact.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport CreateContactForm from './CreateContactForm';\r\n\r\n\r\nfunction CreateContact() {\r\n    // const [data, setData] = useState('');\r\n    // const [isFormVisible, setFormVisible] = useState(false);\r\n    // const [name, setName] = useState('');\r\n    // const[phoneno,setPhone]=useState('');\r\n    // const [email, setEmail] = useState('');\r\n    // const [address, setAddress] = useState('');\r\n    const apiUrl = 'http://localhost:8080/add-user'; // Replace with your API endpoint URL\r\n\r\n    const handleFormSubmit = (data) => {\r\n        // Make an HTTP POST request to the backend API with the data\r\n        fetch(apiUrl, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(data),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((responseData) => {\r\n            // Handle the response from the API if needed\r\n            console.log('Response:', responseData);\r\n    \r\n            // Clear the input fields or perform any other actions\r\n          })\r\n          .catch((error) => {\r\n            // Handle any errors that occurred during the fetch\r\n            console.error('Error:', error);\r\n          });\r\n      };\r\n    \r\n      return (\r\n        <div className=\"app\">\r\n          <h1>Post Data to Backend API</h1>\r\n          <CreateContactForm onFormSubmit={handleFormSubmit} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n//     const openForm = () => {\r\n//         setFormVisible(true);\r\n//     };\r\n\r\n//     const closeForm = () => {\r\n//         setFormVisible(false);\r\n//     };\r\n\r\n//     const handleSubmit = () => {\r\n//         const newContact = {\r\n//             name,\r\n//             phoneno,\r\n//             email,\r\n//             address\r\n//         };\r\n//         fetch(apiUrl, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//             },\r\n//             body: JSON.stringify(newContact),\r\n//         })\r\n//         .then((response) => response.json())\r\n//         .then((data) => {\r\n//             console.log(data);\r\n//             // Clear form fields\r\n//             setName('');\r\n//             setPhone('');\r\n//             setEmail('');\r\n//             setAddress('');\r\n//         })\r\n//         .catch((error) => {\r\n//             console.error('Error:', error);\r\n//         });\r\n//     };\r\n\r\n\r\n//     useEffect(() => {\r\n//         fetch(apiUrl)\r\n//             .then((response) => {\r\n//                 if (!response.ok) {\r\n//                     throw new Error('Network response was not ok');\r\n//                 }\r\n//                 return response.json();\r\n//             })\r\n//             .then((jsonData) => {\r\n//                 setData(jsonData);\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.error('Error fetching data:', error);\r\n//             });\r\n//     }, []);\r\n\r\n//     return (\r\n//         <div className=\"app\">\r\n//             <button className='create-contact-button' onClick={openForm}> \r\n//             <FontAwesomeIcon icon={faPlus} />\r\n            \r\n//             Create Contact</button>\r\n\r\n//             {isFormVisible && (\r\n//                 <CreateContactForm onClose={closeForm} onSubmit={handleSubmit} />\r\n//             )}\r\n\r\n//         </div>\r\n//     );\r\n    \r\n// }\r\n\r\nexport default CreateContact;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,QAAQ,mCAAmC;AAC1D,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpD,SAASC,aAAaA,CAAA,EAAG;EACrB;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,MAAM,GAAG,gCAAgC,CAAC,CAAC;;EAEjD,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;IAC/B;IACAC,KAAK,CAACH,MAAM,EAAE;MACZI,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;IAC3B,CAAC,CAAC,CACCO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,YAAY,IAAK;MACtB;MACAC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,YAAY,CAAC;;MAEtC;IACF,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;MAChB;MACAH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA;MAAAoB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCxB,OAAA,CAACF,iBAAiB;MAAC2B,YAAY,EAAEtB;IAAiB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AAAAE,EAAA,GA1GSzB,aAAa;AA4GtB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}