{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nitish\\\\go\\\\UI\\\\my-react-app\\\\src\\\\CreateContact.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport CreateContactForm from './CreateContactForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateContact() {\n  _s();\n  const [data, setData] = useState(null);\n  const [isFormVisible, setFormVisible] = useState(false);\n  const apiUrl = 'http://localhost:8080/add-user/'; // Replace with your API endpoint URL\n\n  const openForm = () => {\n    setFormVisible(true);\n  };\n  const closeForm = () => {\n    setFormVisible(false);\n  };\n  const handleSubmit = () => {\n    const newContact = {\n      name,\n      phoneno,\n      email,\n      address\n    };\n    fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newContact)\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      // Clear form fields\n      setName('');\n      setPhone('');\n      setEmail('');\n      setAddress('');\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  useEffect(() => {\n    fetch(apiUrl).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(jsonData => {\n      setData(jsonData);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create-contact-button\",\n      onClick: openForm,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faPlus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), \"Create Contact\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), isFormVisible && /*#__PURE__*/_jsxDEV(CreateContactForm, {\n      onClose: closeForm,\n      onSubmit: addContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateContact, \"DVgnw7gZ3RqLxnAOvoK6xfB/d6Q=\");\n_c = CreateContact;\nexport default CreateContact;\nvar _c;\n$RefreshReg$(_c, \"CreateContact\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faPlus","CreateContactForm","jsxDEV","_jsxDEV","CreateContact","_s","data","setData","isFormVisible","setFormVisible","apiUrl","openForm","closeForm","handleSubmit","newContact","name","phoneno","email","address","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","setName","setPhone","setEmail","setAddress","catch","error","ok","Error","jsonData","className","children","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","onClose","onSubmit","addContact","_c","$RefreshReg$"],"sources":["C:/Users/Nitish/go/UI/my-react-app/src/CreateContact.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport CreateContactForm from './CreateContactForm';\r\n\r\n\r\nfunction CreateContact() {\r\n    const [data, setData] = useState(null);\r\n    const [isFormVisible, setFormVisible] = useState(false);\r\n    const apiUrl = 'http://localhost:8080/add-user/'; // Replace with your API endpoint URL\r\n    \r\n\r\n\r\n    const openForm = () => {\r\n        setFormVisible(true);\r\n    };\r\n\r\n    const closeForm = () => {\r\n        setFormVisible(false);\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const newContact = {\r\n            name,\r\n            phoneno,\r\n            email,\r\n            address\r\n        };\r\n        fetch(apiUrl, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(newContact),\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            console.log(data);\r\n            // Clear form fields\r\n            setName('');\r\n            setPhone('');\r\n            setEmail('');\r\n            setAddress('');\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error:', error);\r\n        });\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(apiUrl)\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((jsonData) => {\r\n                setData(jsonData);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching data:', error);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <button className='create-contact-button' onClick={openForm}> \r\n            <FontAwesomeIcon icon={faPlus} />\r\n            \r\n            Create Contact</button>\r\n\r\n            {isFormVisible && (\r\n                <CreateContactForm onClose={closeForm} onSubmit={addContact} />\r\n            )}\r\n\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default CreateContact;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}