{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nitish\\\\go\\\\UI\\\\my-react-app\\\\src\\\\CreateContact.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport CreateContactForm from './CreateContactForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateContact() {\n  _s();\n  const [data, setData] = useState('');\n  const [isFormVisible, setFormVisible] = useState(false);\n  const [contacts, setContacts] = useState([]); // Store contacts data\n  const [name, setName] = useState('');\n  const [phoneno, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const [address, setAddress] = useState('');\n  const apiUrl = 'http://localhost:8080/add-user'; // Replace with your API endpoint URL\n\n  const openForm = () => {\n    setFormVisible(true);\n  };\n  const closeForm = () => {\n    setFormVisible(false);\n  };\n  const addContact = newContact => {\n    setContacts([...contacts, newContact]);\n    closeForm(); // Close the form modal\n  };\n\n  const handleSubmit = () => {\n    const newContact = {\n      name,\n      phoneno,\n      email,\n      address\n    };\n    fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newContact)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.text(); // Read the response as text\n    }).then(response => {\n      if (response) {\n        const jsonData = JSON.parse(response);\n      }\n    }).then(response => response.json()).then(newContact => {\n      console.log(newContact);\n      // Clear form fields\n      setName('');\n      setPhone('');\n      setEmail('');\n      setAddress('');\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  useEffect(() => {\n    fetch(apiUrl).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(jsonData => {\n      setData(jsonData);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create-contact-button\",\n      onClick: openForm,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faPlus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), \"Create Contact\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateContactForm, {\n      isOpen: isFormOpen,\n      onRequestClose: closeForm,\n      onSubmit: addContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), isFormVisible && /*#__PURE__*/_jsxDEV(CreateContactForm, {\n      onClose: closeForm,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contacts.map((contact, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", contact.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", contact.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Mobile No: \", contact.mobileNo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", contact.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateContact, \"t8301dqqLepKbaFcGz9wGXVlVqE=\");\n_c = CreateContact;\nexport default CreateContact;\nvar _c;\n$RefreshReg$(_c, \"CreateContact\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faPlus","CreateContactForm","jsxDEV","_jsxDEV","CreateContact","_s","data","setData","isFormVisible","setFormVisible","contacts","setContacts","name","setName","phoneno","setPhone","email","setEmail","address","setAddress","apiUrl","openForm","closeForm","addContact","newContact","handleSubmit","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","text","jsonData","parse","json","console","log","catch","error","className","children","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","isFormOpen","onRequestClose","onSubmit","onClose","map","contact","index","mobileNo","_c","$RefreshReg$"],"sources":["C:/Users/Nitish/go/UI/my-react-app/src/CreateContact.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport CreateContactForm from './CreateContactForm';\r\n\r\n\r\nfunction CreateContact() {\r\n    const [data, setData] = useState('');\r\n    const [isFormVisible, setFormVisible] = useState(false);\r\n    const [contacts, setContacts] = useState([]); // Store contacts data\r\n    const [name, setName] = useState('');\r\n    const[phoneno,setPhone]=useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [address, setAddress] = useState('');\r\n\r\n    const apiUrl = 'http://localhost:8080/add-user'; // Replace with your API endpoint URL\r\n    \r\n\r\n\r\n    const openForm = () => {\r\n        setFormVisible(true);\r\n    };\r\n\r\n    const closeForm = () => {\r\n        setFormVisible(false);\r\n    };\r\n\r\n    const addContact = (newContact) => {\r\n        setContacts([...contacts, newContact]);\r\n        closeForm(); // Close the form modal\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const newContact = {\r\n            name,\r\n            phoneno,\r\n            email,\r\n            address\r\n        };\r\n        fetch(apiUrl, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(newContact)\r\n        }).then((response) => {\r\n            if (!response.ok) {\r\n              throw new Error('Network response was not ok');\r\n            }\r\n            return response.text(); // Read the response as text\r\n          }).then((response) => {\r\n            if (response) {\r\n              const jsonData = JSON.parse(response);\r\n            } \r\n          })\r\n        .then((response) => response.json())\r\n        .then((newContact) => {\r\n            console.log(newContact);\r\n            // Clear form fields\r\n            setName('');\r\n            setPhone('');\r\n            setEmail('');\r\n            setAddress('');\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error:', error);\r\n        });\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(apiUrl)\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((jsonData) => {\r\n                setData(jsonData);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching data:', error);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <button className='create-contact-button' onClick={openForm}> \r\n            <FontAwesomeIcon icon={faPlus} />\r\n            Create Contact</button>\r\n            <CreateContactForm isOpen={isFormOpen} onRequestClose={closeForm} onSubmit={addContact} />\r\n\r\n            {isFormVisible && (\r\n                <CreateContactForm onClose={closeForm} onSubmit={handleSubmit} />\r\n            )}\r\n            { <ul>\r\n                {contacts.map((contact, index) => (\r\n                    <li key={index}>\r\n                        <p>Name: {contact.name}</p>\r\n                        <p>Email: {contact.email}</p>\r\n                        <p>Mobile No: {contact.mobileNo}</p>\r\n                        <p>Address: {contact.address}</p>\r\n                    </li>\r\n                ))}\r\n            </ul> }\r\n\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default CreateContact;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}