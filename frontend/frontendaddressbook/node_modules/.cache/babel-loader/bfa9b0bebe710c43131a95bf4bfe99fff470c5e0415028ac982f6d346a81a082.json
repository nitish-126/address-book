{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nitish\\\\go\\\\UI\\\\my-react-app\\\\src\\\\CreateContactForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst errorStyles = {\n  color: 'red'\n};\nfunction CreateContactForm({\n  onClose,\n  onSubmit\n}) {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [mobileNo, setMobileNo] = useState('');\n  const [address, setAddress] = useState('');\n  const [nameValid, setNameValid] = useState(true); // Name validation flag\n  const [emailValid, setEmailValid] = useState(true); // Email validation flag\n  const [phoneValid, setPhoneValid] = useState(true); // Phone number validation flag\n\n  const handleNameChange = e => {\n    const nameValue = e.target.value;\n    setName(nameValue);\n\n    // Validate that name has at most 20 characters\n    setNameValid(nameValue.length <= 20);\n\n    // Display an error message if the name is invalid\n    if (nameValue.length > 20) {\n      setNameError('Name must have at most 20 characters.');\n    } else {\n      setNameError('');\n    }\n  };\n  const handleMobileNoChange = e => {\n    const phoneValue = e.target.value;\n    setMobileNo(phoneValue);\n\n    // Validate that phoneValue is a number and has at most 10 digits\n    setPhoneValid(/^\\d{0,10}$/.test(phoneValue));\n\n    // Display an error message if the phone number is invalid\n    if (!/^\\d{0,10}$/.test(phoneValue)) {\n      setPhoneError('Please enter a valid phone number (up to 10 digits).');\n    } else {\n      setPhoneError('');\n    }\n  };\n  const handleEmailChange = e => {\n    const emailValue = e.target.value;\n    setEmail(emailValue);\n\n    // Use a regular expression to validate email format\n    setEmailValid(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(emailValue));\n\n    // Display an error message if the email is invalid\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(emailValue)) {\n      setEmailError('Please enter a valid email address.');\n    } else {\n      setEmailError('');\n    }\n  };\n  const handleSubmit = () => {\n    // Check if all validation flags are true before submitting\n    if (nameValid && emailValid && phoneValid) {\n      const newContact = {\n        name,\n        email,\n        mobileNo,\n        address\n      };\n      onSubmit(newContact);\n      onClose(); // Close the form modal\n    } else {\n      // Handle form submission errors (e.g., display error message)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: handleNameChange,\n          required: true,\n          className: nameValid ? '' : 'invalid'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), !nameValid && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: \"Name must have at most 20 characters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: email,\n          onChange: handleEmailChange,\n          required: true,\n          className: emailValid ? '' : 'invalid'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), !emailValid && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: \"Please enter a valid email address.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Mobile No:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: mobileNo,\n          onChange: handleMobileNoChange,\n          required: true,\n          className: phoneValid ? '' : 'invalid'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), !phoneValid && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: \"Please enter a valid phone number (up to 10 digits).\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: address,\n          onChange: e => setAddress(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleSubmit,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateContactForm, \"/ipVlS5Orpf6qEPglWwd/Q7y2+A=\");\n_c = CreateContactForm;\nexport default CreateContactForm;\nvar _c;\n$RefreshReg$(_c, \"CreateContactForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","errorStyles","color","CreateContactForm","onClose","onSubmit","_s","name","setName","email","setEmail","mobileNo","setMobileNo","address","setAddress","nameValid","setNameValid","emailValid","setEmailValid","phoneValid","setPhoneValid","handleNameChange","e","nameValue","target","value","length","setNameError","handleMobileNoChange","phoneValue","test","setPhoneError","handleEmailChange","emailValue","setEmailError","handleSubmit","newContact","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Nitish/go/UI/my-react-app/src/CreateContactForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nconst errorStyles = {\r\n    color: 'red',\r\n  };\r\n  \r\nfunction CreateContactForm({ onClose, onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [mobileNo, setMobileNo] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [nameValid, setNameValid] = useState(true); // Name validation flag\r\n  const [emailValid, setEmailValid] = useState(true); // Email validation flag\r\n  const [phoneValid, setPhoneValid] = useState(true); // Phone number validation flag\r\n\r\n  const handleNameChange = (e) => {\r\n    const nameValue = e.target.value;\r\n    setName(nameValue);\r\n\r\n    // Validate that name has at most 20 characters\r\n    setNameValid(nameValue.length <= 20);\r\n\r\n    // Display an error message if the name is invalid\r\n    if (nameValue.length > 20) {\r\n      setNameError('Name must have at most 20 characters.');\r\n    } else {\r\n      setNameError('');\r\n    }\r\n  };\r\n\r\n  const handleMobileNoChange = (e) => {\r\n    const phoneValue = e.target.value;\r\n    setMobileNo(phoneValue);\r\n\r\n    // Validate that phoneValue is a number and has at most 10 digits\r\n    setPhoneValid(/^\\d{0,10}$/.test(phoneValue));\r\n\r\n    // Display an error message if the phone number is invalid\r\n    if (!/^\\d{0,10}$/.test(phoneValue)) {\r\n      setPhoneError('Please enter a valid phone number (up to 10 digits).');\r\n    } else {\r\n      setPhoneError('');\r\n    }\r\n  };\r\n\r\n  const handleEmailChange = (e) => {\r\n    const emailValue = e.target.value;\r\n    setEmail(emailValue);\r\n\r\n    // Use a regular expression to validate email format\r\n    setEmailValid(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(emailValue));\r\n\r\n    // Display an error message if the email is invalid\r\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(emailValue)) {\r\n      setEmailError('Please enter a valid email address.');\r\n    } else {\r\n      setEmailError('');\r\n    }\r\n  };\r\n  const handleSubmit = () => {\r\n    // Check if all validation flags are true before submitting\r\n    if (nameValid && emailValid && phoneValid) {\r\n      const newContact = {\r\n        name,\r\n        email,\r\n        mobileNo,\r\n        address,\r\n      };\r\n      onSubmit(newContact);\r\n      onClose(); // Close the form modal\r\n    } else {\r\n      // Handle form submission errors (e.g., display error message)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-modal\">\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label>Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={handleNameChange}\r\n            required\r\n            className={nameValid ? '' : 'invalid'}\r\n          />\r\n          {!nameValid && (\r\n            <div className=\"error-message\">Name must have at most 20 characters.</div>\r\n          )}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={email}\r\n            onChange={handleEmailChange}\r\n            required\r\n            className={emailValid ? '' : 'invalid'}\r\n          />\r\n          {!emailValid && (\r\n            <div className=\"error-message\">Please enter a valid email address.</div>\r\n          )}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Mobile No:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={mobileNo}\r\n            onChange={handleMobileNoChange}\r\n            required\r\n            className={phoneValid ? '' : 'invalid'}\r\n          />\r\n          {!phoneValid && (\r\n            <div className=\"error-message\" >Please enter a valid phone number (up to 10 digits).</div>\r\n          )}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Address:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"buttons\">\r\n          <button type=\"button\" onClick={onClose}>\r\n            Cancel\r\n          </button>\r\n          <button type=\"button\" onClick={handleSubmit}>\r\n            Create\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateContactForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,WAAW,GAAG;EAChBC,KAAK,EAAE;AACT,CAAC;AAEH,SAASC,iBAAiBA,CAAC;EAAEC,OAAO;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClD,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACpD,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEpD,MAAMuB,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAChCjB,OAAO,CAACe,SAAS,CAAC;;IAElB;IACAP,YAAY,CAACO,SAAS,CAACG,MAAM,IAAI,EAAE,CAAC;;IAEpC;IACA,IAAIH,SAAS,CAACG,MAAM,GAAG,EAAE,EAAE;MACzBC,YAAY,CAAC,uCAAuC,CAAC;IACvD,CAAC,MAAM;MACLA,YAAY,CAAC,EAAE,CAAC;IAClB;EACF,CAAC;EAED,MAAMC,oBAAoB,GAAIN,CAAC,IAAK;IAClC,MAAMO,UAAU,GAAGP,CAAC,CAACE,MAAM,CAACC,KAAK;IACjCb,WAAW,CAACiB,UAAU,CAAC;;IAEvB;IACAT,aAAa,CAAC,YAAY,CAACU,IAAI,CAACD,UAAU,CAAC,CAAC;;IAE5C;IACA,IAAI,CAAC,YAAY,CAACC,IAAI,CAACD,UAAU,CAAC,EAAE;MAClCE,aAAa,CAAC,sDAAsD,CAAC;IACvE,CAAC,MAAM;MACLA,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAIV,CAAC,IAAK;IAC/B,MAAMW,UAAU,GAAGX,CAAC,CAACE,MAAM,CAACC,KAAK;IACjCf,QAAQ,CAACuB,UAAU,CAAC;;IAEpB;IACAf,aAAa,CAAC,0CAA0C,CAACY,IAAI,CAACG,UAAU,CAAC,CAAC;;IAE1E;IACA,IAAI,CAAC,0CAA0C,CAACH,IAAI,CAACG,UAAU,CAAC,EAAE;MAChEC,aAAa,CAAC,qCAAqC,CAAC;IACtD,CAAC,MAAM;MACLA,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EACD,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA,IAAIpB,SAAS,IAAIE,UAAU,IAAIE,UAAU,EAAE;MACzC,MAAMiB,UAAU,GAAG;QACjB7B,IAAI;QACJE,KAAK;QACLE,QAAQ;QACRE;MACF,CAAC;MACDR,QAAQ,CAAC+B,UAAU,CAAC;MACpBhC,OAAO,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,MAAM;MACL;IAAA;EAEJ,CAAC;EAED,oBACEJ,OAAA;IAAKqC,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzBtC,OAAA;MAAAsC,QAAA,gBACEtC,OAAA;QAAKqC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBtC,OAAA;UAAAsC,QAAA,EAAO;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpB1C,OAAA;UACE2C,IAAI,EAAC,MAAM;UACXlB,KAAK,EAAElB,IAAK;UACZqC,QAAQ,EAAEvB,gBAAiB;UAC3BwB,QAAQ;UACRR,SAAS,EAAEtB,SAAS,GAAG,EAAE,GAAG;QAAU;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,EACD,CAAC3B,SAAS,iBACTf,OAAA;UAAKqC,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAqC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAC1E;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACN1C,OAAA;QAAKqC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBtC,OAAA;UAAAsC,QAAA,EAAO;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrB1C,OAAA;UACE2C,IAAI,EAAC,MAAM;UACXlB,KAAK,EAAEhB,KAAM;UACbmC,QAAQ,EAAEZ,iBAAkB;UAC5Ba,QAAQ;UACRR,SAAS,EAAEpB,UAAU,GAAG,EAAE,GAAG;QAAU;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC,EACD,CAACzB,UAAU,iBACVjB,OAAA;UAAKqC,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAmC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACxE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACN1C,OAAA;QAAKqC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBtC,OAAA;UAAAsC,QAAA,EAAO;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzB1C,OAAA;UACE2C,IAAI,EAAC,MAAM;UACXlB,KAAK,EAAEd,QAAS;UAChBiC,QAAQ,EAAEhB,oBAAqB;UAC/BiB,QAAQ;UACRR,SAAS,EAAElB,UAAU,GAAG,EAAE,GAAG;QAAU;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC,EACD,CAACvB,UAAU,iBACVnB,OAAA;UAAKqC,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAE;QAAoD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAC1F;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACN1C,OAAA;QAAKqC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBtC,OAAA;UAAAsC,QAAA,EAAO;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvB1C,OAAA;UACE2C,IAAI,EAAC,MAAM;UACXlB,KAAK,EAAEZ,OAAQ;UACf+B,QAAQ,EAAGtB,CAAC,IAAKR,UAAU,CAACQ,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;UAC5CoB,QAAQ;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN1C,OAAA;QAAKqC,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtBtC,OAAA;UAAQ2C,IAAI,EAAC,QAAQ;UAACG,OAAO,EAAE1C,OAAQ;UAAAkC,QAAA,EAAC;QAExC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1C,OAAA;UAAQ2C,IAAI,EAAC,QAAQ;UAACG,OAAO,EAAEX,YAAa;UAAAG,QAAA,EAAC;QAE7C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACpC,EAAA,CAnIQH,iBAAiB;AAAA4C,EAAA,GAAjB5C,iBAAiB;AAqI1B,eAAeA,iBAAiB;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}