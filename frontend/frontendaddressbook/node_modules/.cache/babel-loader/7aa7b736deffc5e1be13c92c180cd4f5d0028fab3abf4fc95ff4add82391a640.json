{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nitish\\\\go\\\\UI\\\\my-react-app\\\\src\\\\CreateContact.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport CreateContactForm from './CreateContactForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateContact() {\n  _s();\n  const [data, setData] = useState(null);\n  const [isFormVisible, setFormVisible] = useState(false);\n  const [contacts, setContacts] = useState([]); // Store contacts data\n  const apiUrl = 'http://localhost:8080/add-user/'; // Replace with your API endpoint URL\n\n  const openForm = () => {\n    setFormVisible(true);\n  };\n  const closeForm = () => {\n    setFormVisible(false);\n  };\n  const addContact = newContact => {\n    // Add the new contact to the list of contacts\n    setContacts([...contacts, newContact]);\n  };\n  useEffect(() => {\n    fetch(apiUrl).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(jsonData => {\n      setData(jsonData);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openForm,\n      children: \"Create Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), isFormVisible && /*#__PURE__*/_jsxDEV(CreateContactForm, {\n      onClose: closeForm,\n      onSubmit: addContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contacts.map((contact, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", contact.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", contact.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Mobile No: \", contact.mobileNo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", contact.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n  // return (\n  //     <div>\n  //         <button className=\"create-contact-button\">\n  //             <FontAwesomeIcon icon={faPlus} /> Create New Contact\n  //         </button>\n  //         {data ? (\n  //             <div>\n  //                 <table>\n  //             <thead>\n  //                 <tr>\n  //                     <th>Name</th>\n  //                     <th>Mobile No</th>\n  //                     <th>Email</th>\n  //                     <th>Address</th>\n  //                     <th>Edit</th>\n  //                 </tr>\n  //             </thead>\n  //             <tbody>\n  //                 {data.map((item) => (\n  //                     <tr key={item.Id}>\n  //                         <td>{item.Name}</td>\n  //                         <td>{item.Mobileno}</td>\n  //                         <td>{item.Email}</td>\n  //                         <td>{item.Address}</td>\n  //                         <td>\n  //                             <button className=\"edit-button\">&#8942;</button>\n  //                         </td>\n  //                     </tr>\n  //                 ))}\n  //             </tbody>\n  //         </table>\n  //             </div>\n  //         ) : null\n  //         }\n  //     </div>\n  // );\n}\n_s(CreateContact, \"VpNUJm/O9bTyo/D31+iHhuVDVH8=\");\n_c = CreateContact;\nexport default CreateContact;\nvar _c;\n$RefreshReg$(_c, \"CreateContact\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faPlus","CreateContactForm","jsxDEV","_jsxDEV","CreateContact","_s","data","setData","isFormVisible","setFormVisible","contacts","setContacts","apiUrl","openForm","closeForm","addContact","newContact","fetch","then","response","ok","Error","json","jsonData","catch","error","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","onSubmit","map","contact","index","name","email","mobileNo","address","_c","$RefreshReg$"],"sources":["C:/Users/Nitish/go/UI/my-react-app/src/CreateContact.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport CreateContactForm from './CreateContactForm';\r\n\r\n\r\nfunction CreateContact() {\r\n    const [data, setData] = useState(null);\r\n    const [isFormVisible, setFormVisible] = useState(false);\r\n    const [contacts, setContacts] = useState([]); // Store contacts data\r\n    const apiUrl = 'http://localhost:8080/add-user/'; // Replace with your API endpoint URL\r\n\r\n\r\n    const openForm = () => {\r\n        setFormVisible(true);\r\n    };\r\n\r\n    const closeForm = () => {\r\n        setFormVisible(false);\r\n    };\r\n\r\n    const addContact = (newContact) => {\r\n        // Add the new contact to the list of contacts\r\n        setContacts([...contacts, newContact]);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(apiUrl)\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((jsonData) => {\r\n                setData(jsonData);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching data:', error);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <button onClick={openForm}>Create Contact</button>\r\n\r\n            {isFormVisible && (\r\n                <CreateContactForm onClose={closeForm} onSubmit={addContact} />\r\n            )}\r\n\r\n            {/* Display your list of contacts */}\r\n            <ul>\r\n                {contacts.map((contact, index) => (\r\n                    <li key={index}>\r\n                        <p>Name: {contact.name}</p>\r\n                        <p>Email: {contact.email}</p>\r\n                        <p>Mobile No: {contact.mobileNo}</p>\r\n                        <p>Address: {contact.address}</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n    // return (\r\n    //     <div>\r\n    //         <button className=\"create-contact-button\">\r\n    //             <FontAwesomeIcon icon={faPlus} /> Create New Contact\r\n    //         </button>\r\n    //         {data ? (\r\n    //             <div>\r\n    //                 <table>\r\n    //             <thead>\r\n    //                 <tr>\r\n    //                     <th>Name</th>\r\n    //                     <th>Mobile No</th>\r\n    //                     <th>Email</th>\r\n    //                     <th>Address</th>\r\n    //                     <th>Edit</th>\r\n    //                 </tr>\r\n    //             </thead>\r\n    //             <tbody>\r\n    //                 {data.map((item) => (\r\n    //                     <tr key={item.Id}>\r\n    //                         <td>{item.Name}</td>\r\n    //                         <td>{item.Mobileno}</td>\r\n    //                         <td>{item.Email}</td>\r\n    //                         <td>{item.Address}</td>\r\n    //                         <td>\r\n    //                             <button className=\"edit-button\">&#8942;</button>\r\n    //                         </td>\r\n    //                     </tr>\r\n    //                 ))}\r\n    //             </tbody>\r\n    //         </table>\r\n    //             </div>\r\n    //         ) : null\r\n    //         }\r\n    //     </div>\r\n    // );\r\n}\r\n\r\nexport default CreateContact;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}