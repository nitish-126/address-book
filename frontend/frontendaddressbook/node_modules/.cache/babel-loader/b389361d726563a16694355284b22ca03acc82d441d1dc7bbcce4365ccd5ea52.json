{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nitish\\\\go\\\\UI\\\\my-react-app\\\\src\\\\UpdateContact.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateContact() {\n  _s();\n  const [data, setData] = useState([]); // Initialize data as an empty array\n  const apiUrl = 'http://localhost:8080/'; // Replace with your API endpoint URL\n\n  useEffect(() => {\n    // Fetch data from the API endpoint when the component mounts\n    fetchData();\n  }, []);\n  const fetchData = () => {\n    // Fetch data from the API endpoint\n    fetch(apiUrl).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(jsonData => {\n      setData(jsonData); // Update the state with the fetched data\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data from API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), data.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ID: \", item.Id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", item.Name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", item.Email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Mobile No: \", item.Mobileno]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", item.Address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this)]\n      }, item.Id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(UpdateContact, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = UpdateContact;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"UpdateContact\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UpdateContact","_s","data","setData","apiUrl","fetchData","fetch","then","response","ok","Error","json","jsonData","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","Id","Name","Email","Mobileno","Address","_c","App","$RefreshReg$"],"sources":["C:/Users/Nitish/go/UI/my-react-app/src/UpdateContact.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction UpdateContact() {\r\n    const [data, setData] = useState([]); // Initialize data as an empty array\r\n    const apiUrl = 'http://localhost:8080/'; // Replace with your API endpoint URL\r\n\r\n    useEffect(() => {\r\n        // Fetch data from the API endpoint when the component mounts\r\n        fetchData();\r\n    }, []);\r\n\r\n    const fetchData = () => {\r\n        // Fetch data from the API endpoint\r\n        fetch(apiUrl)\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((jsonData) => {\r\n                setData(jsonData); // Update the state with the fetched data\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching data:', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Data from API</h1>\r\n            {data.length > 0 ? (\r\n                <ul>\r\n                    {data.map((item) => (\r\n                        <li key={item.Id}>\r\n                            <p>ID: {item.Id}</p>\r\n                            <p>Name: {item.Name}</p>\r\n                            <p>Email: {item.Email}</p>\r\n                            <p>Mobile No: {item.Mobileno}</p>\r\n                            <p>Address: {item.Address}</p>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>No data available</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC,MAAMQ,MAAM,GAAG,wBAAwB,CAAC,CAAC;;EAEzCP,SAAS,CAAC,MAAM;IACZ;IACAQ,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAGA,CAAA,KAAM;IACpB;IACAC,KAAK,CAACF,MAAM,CAAC,CACRG,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAAEK,QAAQ,IAAK;MAChBT,OAAO,CAACS,QAAQ,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EACV,CAAC;EAED,oBACIf,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBlB,IAAI,CAACmB,MAAM,GAAG,CAAC,gBACZtB,OAAA;MAAAiB,QAAA,EACKd,IAAI,CAACoB,GAAG,CAAEC,IAAI,iBACXxB,OAAA;QAAAiB,QAAA,gBACIjB,OAAA;UAAAiB,QAAA,GAAG,MAAI,EAACO,IAAI,CAACC,EAAE;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBrB,OAAA;UAAAiB,QAAA,GAAG,QAAM,EAACO,IAAI,CAACE,IAAI;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBrB,OAAA;UAAAiB,QAAA,GAAG,SAAO,EAACO,IAAI,CAACG,KAAK;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BrB,OAAA;UAAAiB,QAAA,GAAG,aAAW,EAACO,IAAI,CAACI,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjCrB,OAAA;UAAAiB,QAAA,GAAG,WAAS,EAACO,IAAI,CAACK,OAAO;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GALzBG,IAAI,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBAELrB,OAAA;MAAAiB,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACnB,EAAA,CA9CQD,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AAgDtB,eAAe8B,GAAG;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}